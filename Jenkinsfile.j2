env.ENV_BUILDNAME="DEV"
env.dpeClFoTag="Development"
env.dpeClFoBuildDate="TimeStamp"
env.DPE_DEPLOY_KEY
def errorMsg

pipeline {
    agent {
        docker {
            image 'envolve-innovation-labs/eil-cibuild-nodejs:sre-1.0.9-2019.07.23'
             args '-u root -v $WORKSPACE/node_modules -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    environment {
       dev = 'true'
    }
    stages {
          stage('Prepare Build Info') {
                  steps {
                     //slackSend(color: '#FFFF00', , message: "Started: `${env.JOB_NAME}` #${env.BUILD_NUMBER}:\n${env.BUILD_URL}")
                        script{
                            def now = new Date()
                            def buildDisplayName = "${now.format("yyyyMMdd", TimeZone.getTimeZone('America/New_York'))}:${BUILD_NUMBER}"
                            currentBuild.displayName = buildDisplayName
                            env.ENV_BUILDNAME=buildDisplayName
                            env.dpeClFoTag=sh script: "echo \$(git describe ) | tr -d '\n'", returnStdout: true
                            env.dpeClFoBuildDate=sh script: "echo \$(TZ='EST5EDT,M3.2.0,M11.1.0' date) | tr -d '\n'", returnStdout: true
                        }
                        sh '''
                          echo $PWD
                          echo $WORKSPACE
                          ls -ali $WORKSPACE/node_modules
                          echo "Therefore far but the some abandonedly more a less classically because stopped ground far much waked dug and where incessant fish mechanically hurriedly fractious out hence lynx for salmon until abominable idiotic opossum unsafely and.

Vaguely jeez execrably much fruitful ouch pithily much oh far comfortable much next let hence so opened alongside crazily pithily less hound during falsely.

When one where hung amid unthinkingly obsessively pessimistically far inoffensive before because saddled alas panther and thus epidemically oh erotically well graceful sewed rattlesnake alas forbidding fitted set much far and.

Oh that dived and played gazelle set pinched wildebeest visual notwithstanding ravenously earnestly admirable outside darn outbid and oriole wow cockatoo hello forward one far some while beat dry.

Koala rang one outside less because condescendingly this flinched abundantly decorous serene oh uneasy emphatic and a watchful abstrusely shrank.
"
                          echo "something terrible has happened, exiting with error code."
                          exit 1
                        ''' 
                  }
                post {
                  failure{
                        script {
                          env.FAILURE_STAGE = 'Build Info'
                          errorMsg = currentBuild.rawBuild.getLog(10)
                        }
                        sh'''
                          echo yarn run mongod-stop
                          pwd
                        '''
                  }
                }  
            }

          stage('Deploy Some Client Foundation') {
              steps{
                withCredentials([string(credentialsId: 'DPEDeployKey', variable: 'DEPLOYKEY')]) {
                    sh '''
                        echo $(dirname ~/)
                        set -x
                        echo "start deploy dpe-client-foundation"
                        cp docker/dpe-script-environment/.aws.credentials.enc ~/
                        dpeBuildTag=$ENV_BUILDNAME

                        echo "'{"buildNumber": "$dpeBuildTag", "tag": "$dpeClFoTag", "buildDate": "$dpeClFoBuildDate" }'"
                        echo "{ \\\"buildNumber\\\": \\\"$dpeBuildTag\\\", \\\"buildDate\\\": \\\"$dpeClFoBuildDate\\\" }" > some-client-text.json
                        echo "deploy key: $DEPLOYKEY"
                        bin/deploy-dpe.sh -p $DEPLOYKEY -j
                        dpeBuildJson="$(curl -s http://d2zn28muh0qa4g.cloudfront.net/STORYBOOK/build-date.json | jq '.buildNumber' | tr -d '"')"
                         if [ $dpeBuildJson != $ENV_BUILDNAME ];
                    then
                        echo "should have failed"
                        exit 0
                    fi
                        exit 0
                    '''
                }  
              }
              post {
                failure {
                  script {
                    env.FAILURE_STAGE = 'Deploy some client'
                    errorMsg = currentBuild.rawBuild.getLog(10)
                  }
                }
              }              
          }      
    }
      post {
          always {
              script {
                  if(currentBuild.result == 'SUCCESS') {
                      slackSend(color: '#00FF00', message: "Changed from FAILURE to SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER}:\n${env.BUILD_URL} ")
                  }
                  if(currentBuild.result == 'FAILURE') {
                    slackSend(color: '#FF0000', message: "SUCCESS to FAILURE: ${env.JOB_NAME} #${env.BUILD_NUMBER}:\n${env.BUILD_URL} in Stage $env.FAILURE_STAGE Error: $errorMsg ")
                  }
              }
          }
       }
}